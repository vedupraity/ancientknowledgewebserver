name: Build and Deploy

### on github push event
on:
  push:
    branches:
      - feature/fix-github-actions

## on scheduled event
# on:
#   schedule:
#     # * is a special character in YAML so you have to quote this string
#     - cron:  '30 18 * * *' # 12:00 AM IST

jobs:
  CheckCommits:
    runs-on: ubuntu-latest
    outputs:
      hasCommitsInDatabase: ${{ steps.check-new-commits-in-database.outputs.has-new-commits }}
      hasCommitsInWebserver: ${{ steps.check-new-commits-in-webserver.outputs.has-new-commits }}
    steps:
      - uses: actions/checkout@v2
        with:
          repository: vedupraity/ancientknowledgedatabase
          ref: master
          token: ${{ secrets.PAT_GITHUB_REPO }}
      - name: Check commits in ancientknowledgedatabase since 24 hours ago
        id: check-new-commits-in-database
        run: |
          if [[ "$(git log --since='24 hours ago')" != "" ]]; then
            echo "::set-output name=has-new-commits::true"
          else
            echo "::set-output name=has-new-commits::false"
          fi
      - uses: actions/checkout@v2
        with:
          repository: vedupraity/ancientknowledgewebserver
          ref: master
          token: ${{ secrets.PAT_GITHUB_REPO }}
      - name: Check commits in ancientknowledgewebserver since 24 hours ago
        id: check-new-commits-in-webserver
        run: |
          if [[ "$(git log --since='24 hours ago')" != "" ]]; then
            echo "::set-output name=has-new-commits::true"
          else
            echo "::set-output name=has-new-commits::false"
          fi

  Build:
    needs: CheckCommits
    if: ${{ needs.CheckCommits.outputs.hasCommitsInDatabase == 'true' && needs.CheckCommits.outputs.hasCommitsInWebserver == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          repository: vedupraity/ancientknowledgewebserver
          ref: master
          token: ${{ secrets.PAT_GITHUB_REPO }}

      - uses: actions/setup-python@v2
        with:
          python-version: "3.8"
          architecture: "x64"

      - name: üì• Install
        run: |
          echo "using python $(python3 --version)"
          echo "using pip $(pip3 --version)"
          # pip3 install -r requirements.txt

          echo ${{ needs.CheckCommits.outputs.hasCommitsInDatabase }} ${{ needs.CheckCommits.outputs.hasCommitsInWebserver }}

      # - name: ‚öíÔ∏è Build
      #   run: |
      #     source .env.prod && python freeze.py

      # - name: Cache build directory
      #   uses: actions/cache@v2
      #   with:
      #     path: ./build
      #     key: cache-build-dir-${{ github.run_number }}

  # Deploy:
  #   needs: Build
  #   if: ${{ needs.CheckCommits.outputs.hasCommitsInDatabase == 'true' && needs.CheckCommits.outputs.hasCommitsInWebserver == 'true' }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out repo - ancientknowledgewebsite
  #       uses: actions/checkout@v2
  #       with:
  #         repository: vedupraity/ancientknowledgewebsite
  #         ref: feature/github-actions
  #         token: ${{ secrets.PAT_GITHUB_REPO }}

  #     - name: Cache build directory
  #       uses: actions/cache@v2
  #       with:
  #         path: ./build
  #         key: cache-build-dir-${{ github.run_number }}

  #     - name: Replace existing files with build arifacts
  #       run: |
  #         cp -rf build/* .
  #         rm -rf build

  #     - name: üöÄ Deploy
  #       env:
  #         GITHUB_RUN_NUMBER: ${{ env.GITHUB_RUN_NUMBER }}
  #       run: |
  #         git config user.email "vedprakashupraity@gmail.com"
  #         git config user.name "Ved"
  #         git status
  #         git add .
  #         git commit -m "release $GITHUB_RUN_NUMBER on $(date -u)"
  #         git push origin feature/github-actions

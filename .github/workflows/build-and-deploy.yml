name: Build and Deploy

### on github push event
on:
  push:
    branches:
      - master

## on scheduled event
# on:
#   schedule:
#     # * is a special character in YAML so you have to quote this string
#     - cron:  '30 18 * * *' # 12:00 AM IST

jobs:
  CheckCommits:
    runs-on: ubuntu-latest
    outputs:
      hasCommitsInDatabase: ${{ steps.check-new-commits-in-database.outputs.has-new-commits }}
      hasCommitsInWebserver: ${{ steps.check-new-commits-in-webserver.outputs.has-new-commits }}
    steps:
      - name: Check for new commits in database
        id: check-new-commits-in-database
        uses: adriangl/check-new-commits-action@v1
        with:
          token: ${{ secrets.PAT_GITHUB_REPO }}
          seconds: 87300  # 24 Hours and 15 minutes = (24*60*60) + (15*60) Seconds
          branch: 'master'
      - name: Check for new commits in webserver
        id: check-new-commits-in-webserver
        uses: adriangl/check-new-commits-action@v1
        with:
          token: ${{ secrets.PAT_GITHUB_REPO }}
          seconds: 87300  # 24 Hours and 15 minutes = (24*60*60) + (15*60) Seconds
          branch: 'master'

  Build:
    needs: CheckCommits
    if: ${{ needs.CheckCommits.outputs.hasCommitsInDatabase == 'true' && needs.CheckCommits.outputs.hasCommitsInWebserver == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          repository: vedupraity/ancientknowledgewebserver
          ref: master
          token: ${{ secrets.PAT_GITHUB_REPO }}

      - uses: actions/setup-python@v2
        with:
          python-version: "3.8"
          architecture: "x64"

      - name: üì• Install
        run: |
          echo "using python $(python3 --version)"
          echo "using pip $(pip3 --version)"
          pip3 install -r requirements.txt

      - name: ‚öíÔ∏è Build
        run: |
          source .env.prod && python freeze.py

      - name: Cache build directory
        uses: actions/cache@v2
        with:
          path: ./build
          key: cache-build-dir-${{ github.run_number }}

  Deploy:
    needs: Build
    if: ${{ needs.CheckCommits.outputs.hasCommitsInDatabase == 'true' && needs.CheckCommits.outputs.hasCommitsInWebserver == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo - ancientknowledgewebsite
        uses: actions/checkout@v2
        with:
          repository: vedupraity/ancientknowledgewebsite
          ref: feature/github-actions
          token: ${{ secrets.PAT_GITHUB_REPO }}

      - name: Cache build directory
        uses: actions/cache@v2
        with:
          path: ./build
          key: cache-build-dir-${{ github.run_number }}

      - name: Replace existing files with build arifacts
        run: |
          cp -rf build/* .
          rm -rf build

      - name: üöÄ Deploy
        env:
          GITHUB_RUN_NUMBER: ${{ env.GITHUB_RUN_NUMBER }}
        run: |
          git config user.email "vedprakashupraity@gmail.com"
          git config user.name "Ved"
          git status
          git add .
          git commit -m "release $GITHUB_RUN_NUMBER on $(date -u)"
          git push origin feature/github-actions

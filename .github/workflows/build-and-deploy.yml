name: Build and Deploy

on:
  workflow_dispatch:
  schedule:
    - cron:  '30 11 * * *' # 5:00 PM IST Everyday

concurrency: 
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  # check if new commits pushed to the database or webserver repository in last 24 hours
  check-recent-commits:
    name: Check recent commits
    runs-on: ubuntu-latest
    outputs:
      hasCommitsInDatabase: ${{ steps.check-new-commits-in-database.outputs.has-new-commits }}
      hasCommitsInWebserver: ${{ steps.check-new-commits-in-webserver.outputs.has-new-commits }}
    steps:
      - uses: actions/checkout@v2
        with:
          repository: vedupraity/ancientknowledgedatabase
          ref: master
          token: ${{ secrets.PAT_GITHUB_REPO }}
      
      - name: Check commits in ancientknowledgedatabase since 24 hours ago
        id: check-new-commits-in-database
        run: |
          if [[ "$(git log --since='24 hours ago')" != "" ]]; then
            echo "::set-output name=has-new-commits::true"
          else
            echo "::set-output name=has-new-commits::false"
          fi
      
      - uses: actions/checkout@v2
        with:
          repository: vedupraity/ancientknowledgewebserver
          ref: master
          token: ${{ secrets.PAT_GITHUB_REPO }}
      
      - name: Check commits in ancientknowledgewebserver since 24 hours ago
        id: check-new-commits-in-webserver
        run: |
          if [[ "$(git log --since='24 hours ago')" != "" ]]; then
            echo "::set-output name=has-new-commits::true"
          else
            echo "::set-output name=has-new-commits::false"
          fi

  generate-freeze-candidate-urls:
    name: Generate Freeze Candidate URLs
    runs-on: ubuntu-latest
    outputs:
      hasCommitsInDatabase: ${{ steps.check-new-commits-in-database.outputs.has-new-commits }}
      hasCommitsInWebserver: ${{ steps.check-new-commits-in-webserver.outputs.has-new-commits }}
    steps:
      - uses: actions/checkout@v2
      
      - uses: actions/setup-python@v2
        with:
          python-version: "3.10.2"
          architecture: "x64"
      
      - name: Install dependencies
        run: |
          pip3 install -r requirements.txt

      - name: Generate Freeze Candidate URLs
        run: |
          source .env.prod
          python deploy/generate_urls.py
